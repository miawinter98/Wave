@page "/drafts"
@using Microsoft.EntityFrameworkCore
@using Wave.Data
@using Microsoft.AspNetCore.Identity

@attribute [Authorize(Policy = "ArticleEditPermissions")]
@inject IDbContextFactory<ApplicationDbContext> ContextFactory
@inject UserManager<ApplicationUser> UserManager
@inject IStringLocalizer<Drafts> Localizer

<PageTitle>@(Localizer["Title"] + TitlePostfix)</PageTitle>

<h1 class="text-3xl lg:text-5xl font-light mb-6 text-primary">@Localizer["Title"]</h1>
<ArticleCardList Articles="Articles" />

@code {
	[CascadingParameter(Name = "TitlePostfix")]
	private string TitlePostfix { get; set; } = default!;
	[CascadingParameter]
	private HttpContext HttpContext { get; set; } = default!;
	
	private List<Article> Articles { get; } = [];

	protected override async Task OnInitializedAsync() {
		await using var context = await ContextFactory.CreateDbContextAsync();
		string userId = UserManager.GetUserId(HttpContext.User)!;

        bool admin = HttpContext.User.IsInRole("Admin");
		Articles.AddRange(await
			context.Set<Article>()
				.IgnoreQueryFilters()
				.Include(a => a.Author)
				.Include(a => a.Categories)
				.Where(a => !a.IsDeleted && a.Status == ArticleStatus.Draft && (admin || a.Author.Id == userId))
				.OrderByDescending(a => a.PublishDate)
				.ToListAsync());
	}
}
